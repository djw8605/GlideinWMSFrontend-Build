#!/bin/bash
# condor   This is the glideinWMS frontend startup script
# chkconfig: 35 90 30
# description: Starts and stops a glideinWMS frontend

# Emulate function library.
success() {
 echo -en "\033[60G[[32mOK[0m]"
 return 0
}

failure() {
 echo -en "\033[60G[[31mFAILED[0m]"
 return 1
}

frontend_dir='/usr/share/gwms-frontend/frontend-temp'
glideinWMS_dir=$frontend_dir

#frontend_name=`awk '/^FrontendName /{print $2}' $frontend_dir/frontend.descript`
frontend_name='FRONTEND_NAME_CHANGEME'
id_str="$frontend_name"

start() {
        echo -n "Starting glideinWMS frontend $id_str: "
        su -s /bin/bash nobody -c "nice -2 \"glideinFrontend\" \"$frontend_dir\"" 2>/dev/null 1>&2 </dev/null &
        sleep 5
        "checkFrontend" "$frontend_dir"  2>/dev/null 1>&2 </dev/null && success || failure
        RETVAL=$?
        echo
}

stop() {
        echo -n "Shutting down glideinWMS frontend $id_str: "
        "stopFrontend" "$frontend_dir" 2>/dev/null 1>&2 </dev/null && success || failure
        RETVAL=$?
        echo
}

restart() {
        stop
        start
}

reconfig() {
        #if [ -f "$1" ]; then
        #   has_arg=1
        #else
        #   has_arg=0
        #   echo $"Usage: frontend_startup reconfig <fname>"
        #   exit 1
        #fi
        "checkFrontend" "$frontend_dir" >/dev/null 2>&1 </dev/null
        notrun=$?
        if [ $notrun -eq 0 ]; then
          stop
        fi
        "reconfig_frontend" -force_name "$frontend_name" /etc/gwms-frontend/frontend.xml
	  RETVAL=$?
        reconfig_failed=$?
        echo -n "Reconfiguring the frontend"
        test $reconfig_failed -eq 0 && success || failure
        echo
        if [ $notrun -eq 0 ]; then
          start
        fi
}

downtime() {
       if [ -z "$2" ]; then
           echo $"Usage: frontend_startup $1 'frontend'|'entries'|entry_name [delay]"
           exit 1
       fi

	 if [ "$1" == "down" ]; then
	   echo -n "Setting downtime for"
	 elif [ "$1" == "up" ]; then
	   echo -n "Removing downtime for"
	 else
	   echo -n "Infosys-based downtime management for"
	 fi

	 if [ "$2" == "frontend" ]; then
	   echo -n " frontend:"
       else
	   echo -n " entry $2:"
	 fi

	 "$glideinWMS_dir/frontend/manageFrontendDowntimes.py" "$frontend_dir" $2 $1 $3 2>/dev/null 1>&2 </dev/null && success || failure
	 RETVAL=$?
	 echo
}

case $1 in
        start)
                start
        ;;
        stop)
                stop
        ;;
        restart)
                restart
        ;;
        status)
               "checkFrontend" "$frontend_dir"
	         RETVAL=$?
        ;;
        reconfig)
                reconfig $2
        ;;
        *)
        echo $"Usage: frontend_startup {start|stop|restart|status|reconfig}"
        exit 1
esac

exit $RETVAL
